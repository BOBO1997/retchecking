     0  []ast.Decl (len = 3) {
     1  .  0: *ast.GenDecl {
     2  .  .  TokPos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:3:1
     3  .  .  Tok: import
     4  .  .  Lparen: -
     5  .  .  Specs: []ast.Spec (len = 1) {
     6  .  .  .  0: *ast.ImportSpec {
     7  .  .  .  .  Path: *ast.BasicLit {
     8  .  .  .  .  .  ValuePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:3:8
     9  .  .  .  .  .  Kind: STRING
    10  .  .  .  .  .  Value: "\"net/http\""
    11  .  .  .  .  }
    12  .  .  .  .  EndPos: -
    13  .  .  .  }
    14  .  .  }
    15  .  .  Rparen: -
    16  .  }
    17  .  1: *ast.GenDecl {
    18  .  .  Doc: *ast.CommentGroup {
    19  .  .  .  List: []*ast.Comment (len = 1) {
    20  .  .  .  .  0: *ast.Comment {
    21  .  .  .  .  .  Slash: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:5:1
    22  .  .  .  .  .  Text: "// S is a struct"
    23  .  .  .  .  }
    24  .  .  .  }
    25  .  .  }
    26  .  .  TokPos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:6:1
    27  .  .  Tok: type
    28  .  .  Lparen: -
    29  .  .  Specs: []ast.Spec (len = 1) {
    30  .  .  .  0: *ast.TypeSpec {
    31  .  .  .  .  Name: *ast.Ident {
    32  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:6:6
    33  .  .  .  .  .  Name: "S"
    34  .  .  .  .  .  Obj: *ast.Object {
    35  .  .  .  .  .  .  Kind: type
    36  .  .  .  .  .  .  Name: "S"
    37  .  .  .  .  .  .  Decl: *(obj @ 30)
    38  .  .  .  .  .  }
    39  .  .  .  .  }
    40  .  .  .  .  Assign: -
    41  .  .  .  .  Type: *ast.StructType {
    42  .  .  .  .  .  Struct: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:6:8
    43  .  .  .  .  .  Fields: *ast.FieldList {
    44  .  .  .  .  .  .  Opening: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:6:15
    45  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
    46  .  .  .  .  .  .  .  0: *ast.Field {
    47  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    48  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    49  .  .  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:7:2
    50  .  .  .  .  .  .  .  .  .  .  Name: "f"
    51  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    52  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    53  .  .  .  .  .  .  .  .  .  .  .  Name: "f"
    54  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 46)
    55  .  .  .  .  .  .  .  .  .  .  }
    56  .  .  .  .  .  .  .  .  .  }
    57  .  .  .  .  .  .  .  .  }
    58  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
    59  .  .  .  .  .  .  .  .  .  Func: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:7:4
    60  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
    61  .  .  .  .  .  .  .  .  .  .  Opening: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:7:8
    62  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 3) {
    63  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
    64  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
    65  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
    66  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:7:9
    67  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "http"
    68  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    69  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
    70  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:7:14
    71  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "ResponseWriter"
    72  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    73  .  .  .  .  .  .  .  .  .  .  .  .  }
    74  .  .  .  .  .  .  .  .  .  .  .  }
    75  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
    76  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    77  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:7:30
    78  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
    79  .  .  .  .  .  .  .  .  .  .  .  .  }
    80  .  .  .  .  .  .  .  .  .  .  .  }
    81  .  .  .  .  .  .  .  .  .  .  .  2: *ast.Field {
    82  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    83  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:7:38
    84  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
    85  .  .  .  .  .  .  .  .  .  .  .  .  }
    86  .  .  .  .  .  .  .  .  .  .  .  }
    87  .  .  .  .  .  .  .  .  .  .  }
    88  .  .  .  .  .  .  .  .  .  .  Closing: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:7:41
    89  .  .  .  .  .  .  .  .  .  }
    90  .  .  .  .  .  .  .  .  }
    91  .  .  .  .  .  .  .  }
    92  .  .  .  .  .  .  }
    93  .  .  .  .  .  .  Closing: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:8:1
    94  .  .  .  .  .  }
    95  .  .  .  .  .  Incomplete: false
    96  .  .  .  .  }
    97  .  .  .  }
    98  .  .  }
    99  .  .  Rparen: -
   100  .  }
   101  .  2: *ast.FuncDecl {
   102  .  .  Name: *ast.Ident {
   103  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:10:6
   104  .  .  .  Name: "main"
   105  .  .  .  Obj: *ast.Object {
   106  .  .  .  .  Kind: func
   107  .  .  .  .  Name: "main"
   108  .  .  .  .  Decl: *(obj @ 101)
   109  .  .  .  }
   110  .  .  }
   111  .  .  Type: *ast.FuncType {
   112  .  .  .  Func: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:10:1
   113  .  .  .  Params: *ast.FieldList {
   114  .  .  .  .  Opening: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:10:10
   115  .  .  .  .  Closing: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:10:11
   116  .  .  .  }
   117  .  .  }
   118  .  .  Body: *ast.BlockStmt {
   119  .  .  .  Lbrace: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:10:13
   120  .  .  .  List: []ast.Stmt (len = 14) {
   121  .  .  .  .  0: *ast.AssignStmt {
   122  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
   123  .  .  .  .  .  .  0: *ast.Ident {
   124  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:11:2
   125  .  .  .  .  .  .  .  Name: "err1"
   126  .  .  .  .  .  .  .  Obj: *ast.Object {
   127  .  .  .  .  .  .  .  .  Kind: var
   128  .  .  .  .  .  .  .  .  Name: "err1"
   129  .  .  .  .  .  .  .  .  Decl: *(obj @ 121)
   130  .  .  .  .  .  .  .  }
   131  .  .  .  .  .  .  }
   132  .  .  .  .  .  .  1: *ast.Ident {
   133  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:11:8
   134  .  .  .  .  .  .  .  Name: "err2"
   135  .  .  .  .  .  .  .  Obj: *ast.Object {
   136  .  .  .  .  .  .  .  .  Kind: var
   137  .  .  .  .  .  .  .  .  Name: "err2"
   138  .  .  .  .  .  .  .  .  Decl: *(obj @ 121)
   139  .  .  .  .  .  .  .  }
   140  .  .  .  .  .  .  }
   141  .  .  .  .  .  }
   142  .  .  .  .  .  TokPos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:11:13
   143  .  .  .  .  .  Tok: :=
   144  .  .  .  .  .  Rhs: []ast.Expr (len = 2) {
   145  .  .  .  .  .  .  0: *ast.FuncLit {
   146  .  .  .  .  .  .  .  Type: *ast.FuncType {
   147  .  .  .  .  .  .  .  .  Func: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:11:16
   148  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   149  .  .  .  .  .  .  .  .  .  Opening: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:11:20
   150  .  .  .  .  .  .  .  .  .  Closing: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:11:21
   151  .  .  .  .  .  .  .  .  }
   152  .  .  .  .  .  .  .  }
   153  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   154  .  .  .  .  .  .  .  .  Lbrace: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:11:23
   155  .  .  .  .  .  .  .  .  Rbrace: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:11:24
   156  .  .  .  .  .  .  .  }
   157  .  .  .  .  .  .  }
   158  .  .  .  .  .  .  1: *ast.FuncLit {
   159  .  .  .  .  .  .  .  Type: *ast.FuncType {
   160  .  .  .  .  .  .  .  .  Func: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:11:27
   161  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   162  .  .  .  .  .  .  .  .  .  Opening: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:11:31
   163  .  .  .  .  .  .  .  .  .  Closing: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:11:32
   164  .  .  .  .  .  .  .  .  }
   165  .  .  .  .  .  .  .  }
   166  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   167  .  .  .  .  .  .  .  .  Lbrace: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:11:34
   168  .  .  .  .  .  .  .  .  Rbrace: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:11:35
   169  .  .  .  .  .  .  .  }
   170  .  .  .  .  .  .  }
   171  .  .  .  .  .  }
   172  .  .  .  .  }
   173  .  .  .  .  1: *ast.ExprStmt {
   174  .  .  .  .  .  X: *ast.CallExpr {
   175  .  .  .  .  .  .  Fun: *ast.Ident {
   176  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:12:2
   177  .  .  .  .  .  .  .  Name: "err1"
   178  .  .  .  .  .  .  .  Obj: *(obj @ 126)
   179  .  .  .  .  .  .  }
   180  .  .  .  .  .  .  Lparen: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:12:6
   181  .  .  .  .  .  .  Ellipsis: -
   182  .  .  .  .  .  .  Rparen: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:12:7
   183  .  .  .  .  .  }
   184  .  .  .  .  }
   185  .  .  .  .  2: *ast.ExprStmt {
   186  .  .  .  .  .  X: *ast.CallExpr {
   187  .  .  .  .  .  .  Fun: *ast.Ident {
   188  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:13:2
   189  .  .  .  .  .  .  .  Name: "err2"
   190  .  .  .  .  .  .  .  Obj: *(obj @ 135)
   191  .  .  .  .  .  .  }
   192  .  .  .  .  .  .  Lparen: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:13:6
   193  .  .  .  .  .  .  Ellipsis: -
   194  .  .  .  .  .  .  Rparen: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:13:7
   195  .  .  .  .  .  }
   196  .  .  .  .  }
   197  .  .  .  .  3: *ast.ExprStmt {
   198  .  .  .  .  .  X: *ast.CallExpr {
   199  .  .  .  .  .  .  Fun: *ast.FuncLit {
   200  .  .  .  .  .  .  .  Type: *ast.FuncType {
   201  .  .  .  .  .  .  .  .  Func: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:15:2
   202  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   203  .  .  .  .  .  .  .  .  .  Opening: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:15:6
   204  .  .  .  .  .  .  .  .  .  Closing: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:15:7
   205  .  .  .  .  .  .  .  .  }
   206  .  .  .  .  .  .  .  }
   207  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   208  .  .  .  .  .  .  .  .  Lbrace: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:15:9
   209  .  .  .  .  .  .  .  .  Rbrace: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:15:10
   210  .  .  .  .  .  .  .  }
   211  .  .  .  .  .  .  }
   212  .  .  .  .  .  .  Lparen: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:15:11
   213  .  .  .  .  .  .  Ellipsis: -
   214  .  .  .  .  .  .  Rparen: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:15:12
   215  .  .  .  .  .  }
   216  .  .  .  .  }
   217  .  .  .  .  4: *ast.DeclStmt {
   218  .  .  .  .  .  Decl: *ast.GenDecl {
   219  .  .  .  .  .  .  TokPos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:17:2
   220  .  .  .  .  .  .  Tok: var
   221  .  .  .  .  .  .  Lparen: -
   222  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
   223  .  .  .  .  .  .  .  0: *ast.ValueSpec {
   224  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   225  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   226  .  .  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:17:6
   227  .  .  .  .  .  .  .  .  .  .  Name: "err3"
   228  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   229  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   230  .  .  .  .  .  .  .  .  .  .  .  Name: "err3"
   231  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 223)
   232  .  .  .  .  .  .  .  .  .  .  .  Data: 0
   233  .  .  .  .  .  .  .  .  .  .  }
   234  .  .  .  .  .  .  .  .  .  }
   235  .  .  .  .  .  .  .  .  }
   236  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   237  .  .  .  .  .  .  .  .  .  Func: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:17:11
   238  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   239  .  .  .  .  .  .  .  .  .  .  Opening: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:17:15
   240  .  .  .  .  .  .  .  .  .  .  Closing: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:17:16
   241  .  .  .  .  .  .  .  .  .  }
   242  .  .  .  .  .  .  .  .  }
   243  .  .  .  .  .  .  .  }
   244  .  .  .  .  .  .  }
   245  .  .  .  .  .  .  Rparen: -
   246  .  .  .  .  .  }
   247  .  .  .  .  }
   248  .  .  .  .  5: *ast.AssignStmt {
   249  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   250  .  .  .  .  .  .  0: *ast.Ident {
   251  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:18:2
   252  .  .  .  .  .  .  .  Name: "err3"
   253  .  .  .  .  .  .  .  Obj: *(obj @ 228)
   254  .  .  .  .  .  .  }
   255  .  .  .  .  .  }
   256  .  .  .  .  .  TokPos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:18:7
   257  .  .  .  .  .  Tok: =
   258  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   259  .  .  .  .  .  .  0: *ast.FuncLit {
   260  .  .  .  .  .  .  .  Type: *ast.FuncType {
   261  .  .  .  .  .  .  .  .  Func: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:18:9
   262  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   263  .  .  .  .  .  .  .  .  .  Opening: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:18:13
   264  .  .  .  .  .  .  .  .  .  Closing: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:18:14
   265  .  .  .  .  .  .  .  .  }
   266  .  .  .  .  .  .  .  }
   267  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   268  .  .  .  .  .  .  .  .  Lbrace: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:18:16
   269  .  .  .  .  .  .  .  .  Rbrace: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:18:17
   270  .  .  .  .  .  .  .  }
   271  .  .  .  .  .  .  }
   272  .  .  .  .  .  }
   273  .  .  .  .  }
   274  .  .  .  .  6: *ast.ExprStmt {
   275  .  .  .  .  .  X: *ast.CallExpr {
   276  .  .  .  .  .  .  Fun: *ast.Ident {
   277  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:20:2
   278  .  .  .  .  .  .  .  Name: "err3"
   279  .  .  .  .  .  .  .  Obj: *(obj @ 228)
   280  .  .  .  .  .  .  }
   281  .  .  .  .  .  .  Lparen: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:20:6
   282  .  .  .  .  .  .  Ellipsis: -
   283  .  .  .  .  .  .  Rparen: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:20:7
   284  .  .  .  .  .  }
   285  .  .  .  .  }
   286  .  .  .  .  7: *ast.AssignStmt {
   287  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   288  .  .  .  .  .  .  0: *ast.Ident {
   289  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:23:2
   290  .  .  .  .  .  .  .  Name: "errs"
   291  .  .  .  .  .  .  .  Obj: *ast.Object {
   292  .  .  .  .  .  .  .  .  Kind: var
   293  .  .  .  .  .  .  .  .  Name: "errs"
   294  .  .  .  .  .  .  .  .  Decl: *(obj @ 286)
   295  .  .  .  .  .  .  .  }
   296  .  .  .  .  .  .  }
   297  .  .  .  .  .  }
   298  .  .  .  .  .  TokPos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:23:7
   299  .  .  .  .  .  Tok: :=
   300  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   301  .  .  .  .  .  .  0: *ast.CallExpr {
   302  .  .  .  .  .  .  .  Fun: *ast.Ident {
   303  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:23:10
   304  .  .  .  .  .  .  .  .  Name: "make"
   305  .  .  .  .  .  .  .  }
   306  .  .  .  .  .  .  .  Lparen: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:23:14
   307  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   308  .  .  .  .  .  .  .  .  0: *ast.ArrayType {
   309  .  .  .  .  .  .  .  .  .  Lbrack: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:23:15
   310  .  .  .  .  .  .  .  .  .  Elt: *ast.FuncType {
   311  .  .  .  .  .  .  .  .  .  .  Func: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:23:17
   312  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   313  .  .  .  .  .  .  .  .  .  .  .  Opening: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:23:21
   314  .  .  .  .  .  .  .  .  .  .  .  Closing: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:23:22
   315  .  .  .  .  .  .  .  .  .  .  }
   316  .  .  .  .  .  .  .  .  .  }
   317  .  .  .  .  .  .  .  .  }
   318  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   319  .  .  .  .  .  .  .  .  .  ValuePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:23:25
   320  .  .  .  .  .  .  .  .  .  Kind: INT
   321  .  .  .  .  .  .  .  .  .  Value: "10"
   322  .  .  .  .  .  .  .  .  }
   323  .  .  .  .  .  .  .  }
   324  .  .  .  .  .  .  .  Ellipsis: -
   325  .  .  .  .  .  .  .  Rparen: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:23:27
   326  .  .  .  .  .  .  }
   327  .  .  .  .  .  }
   328  .  .  .  .  }
   329  .  .  .  .  8: *ast.AssignStmt {
   330  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   331  .  .  .  .  .  .  0: *ast.IndexExpr {
   332  .  .  .  .  .  .  .  X: *ast.Ident {
   333  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:24:2
   334  .  .  .  .  .  .  .  .  Name: "errs"
   335  .  .  .  .  .  .  .  .  Obj: *(obj @ 291)
   336  .  .  .  .  .  .  .  }
   337  .  .  .  .  .  .  .  Lbrack: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:24:6
   338  .  .  .  .  .  .  .  Index: *ast.BasicLit {
   339  .  .  .  .  .  .  .  .  ValuePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:24:7
   340  .  .  .  .  .  .  .  .  Kind: INT
   341  .  .  .  .  .  .  .  .  Value: "5"
   342  .  .  .  .  .  .  .  }
   343  .  .  .  .  .  .  .  Rbrack: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:24:8
   344  .  .  .  .  .  .  }
   345  .  .  .  .  .  }
   346  .  .  .  .  .  TokPos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:24:10
   347  .  .  .  .  .  Tok: =
   348  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   349  .  .  .  .  .  .  0: *ast.FuncLit {
   350  .  .  .  .  .  .  .  Type: *ast.FuncType {
   351  .  .  .  .  .  .  .  .  Func: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:24:12
   352  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   353  .  .  .  .  .  .  .  .  .  Opening: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:24:16
   354  .  .  .  .  .  .  .  .  .  Closing: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:24:17
   355  .  .  .  .  .  .  .  .  }
   356  .  .  .  .  .  .  .  }
   357  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   358  .  .  .  .  .  .  .  .  Lbrace: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:24:19
   359  .  .  .  .  .  .  .  .  Rbrace: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:24:20
   360  .  .  .  .  .  .  .  }
   361  .  .  .  .  .  .  }
   362  .  .  .  .  .  }
   363  .  .  .  .  }
   364  .  .  .  .  9: *ast.ExprStmt {
   365  .  .  .  .  .  X: *ast.CallExpr {
   366  .  .  .  .  .  .  Fun: *ast.IndexExpr {
   367  .  .  .  .  .  .  .  X: *ast.Ident {
   368  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:25:2
   369  .  .  .  .  .  .  .  .  Name: "errs"
   370  .  .  .  .  .  .  .  .  Obj: *(obj @ 291)
   371  .  .  .  .  .  .  .  }
   372  .  .  .  .  .  .  .  Lbrack: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:25:6
   373  .  .  .  .  .  .  .  Index: *ast.BasicLit {
   374  .  .  .  .  .  .  .  .  ValuePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:25:7
   375  .  .  .  .  .  .  .  .  Kind: INT
   376  .  .  .  .  .  .  .  .  Value: "5"
   377  .  .  .  .  .  .  .  }
   378  .  .  .  .  .  .  .  Rbrack: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:25:8
   379  .  .  .  .  .  .  }
   380  .  .  .  .  .  .  Lparen: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:25:9
   381  .  .  .  .  .  .  Ellipsis: -
   382  .  .  .  .  .  .  Rparen: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:25:10
   383  .  .  .  .  .  }
   384  .  .  .  .  }
   385  .  .  .  .  10: *ast.DeclStmt {
   386  .  .  .  .  .  Decl: *ast.GenDecl {
   387  .  .  .  .  .  .  TokPos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:27:2
   388  .  .  .  .  .  .  Tok: var
   389  .  .  .  .  .  .  Lparen: -
   390  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
   391  .  .  .  .  .  .  .  0: *ast.ValueSpec {
   392  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   393  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   394  .  .  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:27:6
   395  .  .  .  .  .  .  .  .  .  .  Name: "s"
   396  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   397  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   398  .  .  .  .  .  .  .  .  .  .  .  Name: "s"
   399  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 391)
   400  .  .  .  .  .  .  .  .  .  .  .  Data: 0
   401  .  .  .  .  .  .  .  .  .  .  }
   402  .  .  .  .  .  .  .  .  .  }
   403  .  .  .  .  .  .  .  .  }
   404  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   405  .  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:27:8
   406  .  .  .  .  .  .  .  .  .  Name: "S"
   407  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 34)
   408  .  .  .  .  .  .  .  .  }
   409  .  .  .  .  .  .  .  }
   410  .  .  .  .  .  .  }
   411  .  .  .  .  .  .  Rparen: -
   412  .  .  .  .  .  }
   413  .  .  .  .  }
   414  .  .  .  .  11: *ast.DeclStmt {
   415  .  .  .  .  .  Decl: *ast.GenDecl {
   416  .  .  .  .  .  .  TokPos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:28:2
   417  .  .  .  .  .  .  Tok: var
   418  .  .  .  .  .  .  Lparen: -
   419  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
   420  .  .  .  .  .  .  .  0: *ast.ValueSpec {
   421  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   422  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   423  .  .  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:28:6
   424  .  .  .  .  .  .  .  .  .  .  Name: "w"
   425  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   426  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   427  .  .  .  .  .  .  .  .  .  .  .  Name: "w"
   428  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 420)
   429  .  .  .  .  .  .  .  .  .  .  .  Data: 0
   430  .  .  .  .  .  .  .  .  .  .  }
   431  .  .  .  .  .  .  .  .  .  }
   432  .  .  .  .  .  .  .  .  }
   433  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   434  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   435  .  .  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:28:8
   436  .  .  .  .  .  .  .  .  .  .  Name: "http"
   437  .  .  .  .  .  .  .  .  .  }
   438  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   439  .  .  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:28:13
   440  .  .  .  .  .  .  .  .  .  .  Name: "ResponseWriter"
   441  .  .  .  .  .  .  .  .  .  }
   442  .  .  .  .  .  .  .  .  }
   443  .  .  .  .  .  .  .  }
   444  .  .  .  .  .  .  }
   445  .  .  .  .  .  .  Rparen: -
   446  .  .  .  .  .  }
   447  .  .  .  .  }
   448  .  .  .  .  12: *ast.AssignStmt {
   449  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   450  .  .  .  .  .  .  0: *ast.SelectorExpr {
   451  .  .  .  .  .  .  .  X: *ast.Ident {
   452  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:29:2
   453  .  .  .  .  .  .  .  .  Name: "s"
   454  .  .  .  .  .  .  .  .  Obj: *(obj @ 396)
   455  .  .  .  .  .  .  .  }
   456  .  .  .  .  .  .  .  Sel: *ast.Ident {
   457  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:29:4
   458  .  .  .  .  .  .  .  .  Name: "f"
   459  .  .  .  .  .  .  .  }
   460  .  .  .  .  .  .  }
   461  .  .  .  .  .  }
   462  .  .  .  .  .  TokPos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:29:6
   463  .  .  .  .  .  Tok: =
   464  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   465  .  .  .  .  .  .  0: *ast.SelectorExpr {
   466  .  .  .  .  .  .  .  X: *ast.Ident {
   467  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:29:8
   468  .  .  .  .  .  .  .  .  Name: "http"
   469  .  .  .  .  .  .  .  }
   470  .  .  .  .  .  .  .  Sel: *ast.Ident {
   471  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:29:13
   472  .  .  .  .  .  .  .  .  Name: "Error"
   473  .  .  .  .  .  .  .  }
   474  .  .  .  .  .  .  }
   475  .  .  .  .  .  }
   476  .  .  .  .  }
   477  .  .  .  .  13: *ast.ExprStmt {
   478  .  .  .  .  .  X: *ast.CallExpr {
   479  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   480  .  .  .  .  .  .  .  X: *ast.Ident {
   481  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:31:2
   482  .  .  .  .  .  .  .  .  Name: "s"
   483  .  .  .  .  .  .  .  .  Obj: *(obj @ 396)
   484  .  .  .  .  .  .  .  }
   485  .  .  .  .  .  .  .  Sel: *ast.Ident {
   486  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:31:4
   487  .  .  .  .  .  .  .  .  Name: "f"
   488  .  .  .  .  .  .  .  }
   489  .  .  .  .  .  .  }
   490  .  .  .  .  .  .  Lparen: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:31:5
   491  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
   492  .  .  .  .  .  .  .  0: *ast.Ident {
   493  .  .  .  .  .  .  .  .  NamePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:31:6
   494  .  .  .  .  .  .  .  .  Name: "w"
   495  .  .  .  .  .  .  .  .  Obj: *(obj @ 425)
   496  .  .  .  .  .  .  .  }
   497  .  .  .  .  .  .  .  1: *ast.BasicLit {
   498  .  .  .  .  .  .  .  .  ValuePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:31:9
   499  .  .  .  .  .  .  .  .  Kind: STRING
   500  .  .  .  .  .  .  .  .  Value: "\"\""
   501  .  .  .  .  .  .  .  }
   502  .  .  .  .  .  .  .  2: *ast.BasicLit {
   503  .  .  .  .  .  .  .  .  ValuePos: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:31:13
   504  .  .  .  .  .  .  .  .  Kind: INT
   505  .  .  .  .  .  .  .  .  Value: "0"
   506  .  .  .  .  .  .  .  }
   507  .  .  .  .  .  .  }
   508  .  .  .  .  .  .  Ellipsis: -
   509  .  .  .  .  .  .  Rparen: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:31:14
   510  .  .  .  .  .  }
   511  .  .  .  .  }
   512  .  .  .  }
   513  .  .  .  Rbrace: /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:32:1
   514  .  .  }
   515  .  }
   516  }
Set{func net/http.Error(w net/http.ResponseWriter, error string, code int)}
1
true
false

err1 var err1 func()
err2 var err2 func()

fun is an *ast.Ident:  err1
xobj:  var err1 func()
function without return /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:12:2 
NG
NG

fun is an *ast.Ident:  err2
xobj:  var err2 func()
function without return /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:13:2 
NG
NG

fun is an *ast.FuncLit:  &{0xc007c22a40 0xc007e16fc0}


err3 <nil>

fun is an *ast.Ident:  err3
xobj:  var err3 func()
/Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:20:2 
pass

errs var errs []func()


fun:  &{errs 7013111 0xc007c22ce0 7013113}
xobj:  <nil>
/Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:25:2 
pass




fun.Sel.Obj:  f
xobj:  field f func(net/http.ResponseWriter, string, int)
The last function without return /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go:31:4 
NG

Defs
map[e:<nil> S:type e.S struct{f func(net/http.ResponseWriter, string, int)} f:field f func(net/http.ResponseWriter, string, int) main:func e.main() err1:var err1 func() err2:var err2 func() err3:var err3 func() errs:var errs []func() s:var s e.S w:var w net/http.ResponseWriter]
key:  s  item:  var s e.S
key:  w  item:  var w net/http.ResponseWriter
key:  S  item:  type e.S struct{f func(net/http.ResponseWriter, string, int)}
key:  main  item:  func e.main()
key:  f  item:  field f func(net/http.ResponseWriter, string, int)
key:  err1  item:  var err1 func()
key:  err2  item:  var err2 func()
key:  err3  item:  var err3 func()
key:  errs  item:  var errs []func()
key:  e  item:  <nil>

Scopes
key:  &{7012879 0xc007e16db0 <nil>}  item:  function scope 0xc00684e1e0 {
}

key:  &{7012944 0xc007e16f60 <nil>}  item:  function scope 0xc00684e280 {
}

key:  &{7012980 0xc007e17020 <nil>}  item:  function scope 0xc00684e320 {
}

key:  &{7012995 0xc007e17080 <nil>}  item:  function scope 0xc00684e370 {
}

key:  &{7012808 0xc007e16c90 <nil>}  item:  function scope 0xc007c25f40 {
}

key:  &{7012850 0xc007e16d20 <nil>}  item:  function scope 0xc00684e0f0 {
.  var err1 func()
.  var err2 func()
.  var err3 func()
.  var errs []func()
.  var s e.S
.  var w net/http.ResponseWriter
}

key:  &{7013073 0xc007e17140 <nil>}  item:  function scope 0xc00684e410 {
}

key:  &{7013096 0xc007e17200 <nil>}  item:  function scope 0xc00684e550 {
}

key:  &{<nil> 7012742 e [0xc007c282c0 0xc007c28440 0xc007e172f0] scope 0xc006daddf0 {
	type S
	func main
}
 [0xc007e16c00] [http string int make http http] [0xc007c22660 0xc007c22980 0xc007c22a00 0xc007c22a80 0xc007c22b60 0xc007c22ba0 0xc007c22d20 0xc007c22fc0]}  item:  /Users/yangbo/go/src/github.com/BOBO1997/return-checking/testdata/src/e/e.go scope 0xc007c25e00 {
.  package http ("net/http")
}

key:  &{7012890 0xc007e16ea0 <nil>}  item:  function scope 0xc00684e230 {
}


Implicits
key:  &{<nil> <nil> 0xc007c22680 <nil> 0}  item:  package http ("net/http")
key:  &{<nil> [] 0xc007c22720 <nil> <nil>}  item:  var  net/http.ResponseWriter
key:  &{<nil> [] string <nil> <nil>}  item:  var  string
key:  &{<nil> [] int <nil> <nil>}  item:  var  int

Selections
key:  &{s f}  item:  field (e.S) f func(net/http.ResponseWriter, string, int)
key:  &{s f}  item:  field (e.S) f func(net/http.ResponseWriter, string, int)

InitOrder

Types
key:  err2  item:  {5 func() <nil>}
key:  &{7012995 0xc007e17080 <nil>}  item:  {3 func() <nil>}
key:  &{0xc007c22b00 0xc007e170e0}  item:  {7 func() <nil>}
key:  &{7013071 <nil> 0xc007c22c00}  item:  {3 []func() <nil>}
key:  &{s f}  item:  {5 func(net/http.ResponseWriter, string, int) <nil>}
key:  &{s f}  item:  {5 func(net/http.ResponseWriter, string, int) <nil>}
key:  &{0xc007c22f00 7013190 [w 0xc007c22f40 0xc007c22f80] 0 7013199}  item:  {1 () <nil>}
key:  &{7012808 0xc007e16c90 <nil>}  item:  {3 func(net/http.ResponseWriter, string, int) <nil>}
key:  &{0xc007c22900 0xc007e16f00}  item:  {7 func() <nil>}
key:  &{7013073 0xc007e17140 <nil>}  item:  {3 func() <nil>}
key:  &{7013091 INT 5}  item:  {4 int 5}
key:  errs  item:  {5 []func() <nil>}
key:  &{7012879 0xc007e16db0 <nil>}  item:  {3 func() <nil>}
key:  &{err2 7012926 [] 0 7012927}  item:  {1 () <nil>}
key:  &{0xc006d70270 7012953 [] 0 7012954}  item:  {1 () <nil>}
key:  errs  item:  {5 []func() <nil>}
key:  &{errs 7013111 0xc007c22ce0 7013113}  item:  {5 func() <nil>}
key:  w  item:  {5 net/http.ResponseWriter <nil>}
key:  &{7013194 STRING ""}  item:  {4 string ""}
key:  &{7013198 INT 0}  item:  {4 int 0}
key:  &{7012796 0xc007e16cc0 false}  item:  {3 struct{f func(net/http.ResponseWriter, string, int)} <nil>}
key:  int  item:  {3 int <nil>}
key:  &{7012944 0xc007e16f60 <nil>}  item:  {3 func() <nil>}
key:  &{0xc007c22a40 0xc007e16fc0}  item:  {7 func() <nil>}
key:  &{7012980 0xc007e17020 <nil>}  item:  {3 func() <nil>}
key:  make  item:  {2 func([]func(), int) []func() <nil>}
key:  &{7013096 0xc007e17200 <nil>}  item:  {3 func() <nil>}
key:  S  item:  {3 e.S <nil>}
key:  string  item:  {3 string <nil>}
key:  &{0xc007c22ca0 0xc007e17260}  item:  {7 func() <nil>}
key:  &{0xc007e17290 7013114 [] 0 7013115}  item:  {1 () <nil>}
key:  s  item:  {5 e.S <nil>}
key:  &{err1 7012905 [] 0 7012906}  item:  {1 () <nil>}
key:  &{make 7013070 [0xc007e17170 0xc007c22c20] 0 7013083}  item:  {7 []func() <nil>}
key:  &{errs 7013090 0xc007c22c80 7013092}  item:  {5 func() <nil>}
key:  &{http ResponseWriter}  item:  {3 net/http.ResponseWriter <nil>}
key:  s  item:  {5 e.S <nil>}
key:  err1  item:  {5 func() <nil>}
key:  &{0xc007c228e0 0xc007e16e40}  item:  {7 func() <nil>}
key:  &{7012890 0xc007e16ea0 <nil>}  item:  {3 func() <nil>}
key:  err3  item:  {5 func() <nil>}
key:  err3  item:  {5 func() <nil>}
key:  &{err3 7013011 [] 0 7013012}  item:  {1 () <nil>}
key:  &{7013081 INT 10}  item:  {4 int 10}
key:  &{7013112 INT 5}  item:  {4 int 5}
key:  &{http Error}  item:  {7 func(w net/http.ResponseWriter, error string, code int) <nil>}
key:  &{http ResponseWriter}  item:  {3 net/http.ResponseWriter <nil>}

Uses
key:  err2  item:  var err2 func()
key:  errs  item:  var errs []func()
key:  http  item:  package http ("net/http")
key:  ResponseWriter  item:  type net/http.ResponseWriter interface{Header() net/http.Header; Write([]byte) (int, error); WriteHeader(statusCode int)}
key:  http  item:  package http ("net/http")
key:  s  item:  var s e.S
key:  w  item:  var w net/http.ResponseWriter
key:  make  item:  builtin make
key:  f  item:  field f func(net/http.ResponseWriter, string, int)
key:  http  item:  package http ("net/http")
key:  err1  item:  var err1 func()
key:  err3  item:  var err3 func()
key:  ResponseWriter  item:  type net/http.ResponseWriter interface{Header() net/http.Header; Write([]byte) (int, error); WriteHeader(statusCode int)}
key:  string  item:  type string
key:  int  item:  type int
key:  err3  item:  var err3 func()
key:  errs  item:  var errs []func()
key:  S  item:  type e.S struct{f func(net/http.ResponseWriter, string, int)}
key:  Error  item:  func net/http.Error(w net/http.ResponseWriter, error string, code int)
key:  s  item:  var s e.S
key:  f  item:  field f func(net/http.ResponseWriter, string, int)
--- FAIL: TestAnalyzer (1.26s)
    analysistest.go:419: e/e.go:20:2: diagnostic "OK" does not match pattern "NG"
    analysistest.go:419: e/e.go:25:2: diagnostic "Undefined Process" does not match pattern "NG"
    analysistest.go:419: e/e.go:25:2: diagnostic "OK" does not match pattern "NG"
    analysistest.go:483: e/e.go:20: no diagnostic was reported matching "NG"
    analysistest.go:483: e/e.go:25: no diagnostic was reported matching "NG"
FAIL
exit status 1
FAIL	github.com/BOBO1997/retchecking	1.633s
